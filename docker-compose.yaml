services:

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    container_name: nginx
    tty: true
    ports:
      - 8080:80
    networks:
      - node-network
    depends_on:
      app:
       condition: service_healthy
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: app
    networks:
      - node-network
    volumes:
      - ./node:/app
      - /app/node_modules
    tty: true
    environment:
      - PORT=3000
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_DATABASE=nodedb
      - MYSQL_PASSWORD=root
    # ports: 
    #   - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3000/"]
      interval: 5s
      timeout: 30s
      retries: 6
    depends_on:
      db:
       condition: service_healthy
  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes: 
      - ./mysql/volumes/mysql/:/var/lib/mysql/
      - ./mysql/start.sql:/docker-entrypoint-initdb.d/1.sql
    environment: 
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks: 
      - node-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 10s
      retries: 3

    

networks: 
  node-network:
    driver: bridge     